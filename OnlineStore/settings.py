"""
Django settings for OnlineStore project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7__2k$qfzy1xi%ldyg^@#48n_yv!*9f5tsjxn=w!35z7su*)#p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_extensions',
    'storages',

    'Products',
    'Accounts',
    # 'Cart',
    # 'Orders',
    # 'Search',
    # 'Payments',
    # 'Wishlist',
    # 'Reviews',
    # 'Checkout',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    # Site-Wide Cache Middleware
    # "django.middleware.cache.UpdateCacheMiddleware",    # saves responses to cache
    "django.middleware.common.CommonMiddleware",        # common middleware
    # "django.middleware.cache.FetchFromCacheMiddleware", # fetches from cache if available

    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CACHE_MIDDLEWARE_SECONDS = 400  # Cache duration in seconds
CACHE_MIDDLEWARE_KEY_PREFIX = "ecommerce_cache_dev"

ROOT_URLCONF = 'OnlineStore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "_templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '_static/'

# For development: where Django looks for static files (in addition to app/static/)
STATICFILES_DIRS = [
    BASE_DIR / "_static",
]

MEDIA_ROOT = os.path.join(BASE_DIR, "_media")
MEDIA_URL = "/_media/"

WSGI_APPLICATION = 'OnlineStore.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'HOST': os.getenv("DB_HOST"),
        'PORT': os.getenv("DB_PORT")
    },
    # For MongoDB
    # 'mongo': {
    #     'ENGINE': 'djongo',
    #     'NAME': os.getenv("MONGO_DB_NAME"),
    #     'ENFORCE_SCHEMA': False,  # Optional: Set False if need to skip schema enforcement
    #     'CLIENT': {
    #         'host': os.getenv("MONGO_DB_URI"),  # Mongo URI
    #     },
    # }
}
# DATABASE_ROUTERS = ['path.to.MongoDBRouter']  # Create a database router


'''
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
'''


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LOGIN_REDIRECT_URL = "dashboard/"
LOGOUT_REDIRECT_URL = "dashboard/"


# BACKBLAZE B2

DEFAULT_FILE_STORAGE = 'storages.backends.b2.B2Storage'

B2_APPLICATION_KEY_ID = os.getenv("B2_APPLICATION_KEY_ID")
B2_APPLICATION_KEY = os.getenv("B2_APPLICATION_KEY")
B2_BUCKET_NAME = os.getenv("B2_BUCKET_NAME")
B2_MEDIA_URL = f'https://f000.backblazeb2.com/file/{B2_BUCKET_NAME}/'


AUTH_USER_MODEL = 'Accounts.CustomUser'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 2000


EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"